{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport let UserAuthService = /*#__PURE__*/(() => {\n  class UserAuthService {\n    constructor() {\n      this.showLoginSource = new BehaviorSubject(true);\n      this.showLogin$ = this.showLoginSource.asObservable();\n    }\n\n    setRoles(roles) {\n      localStorage.setItem('roles', JSON.stringify(roles));\n    }\n\n    getRoles() {\n      const rolesString = localStorage.getItem('roles');\n\n      if (rolesString === null) {\n        return null;\n      }\n\n      return JSON.parse(rolesString);\n    }\n\n    setToken(jwtToken) {\n      localStorage.setItem('jwtToken', jwtToken);\n    }\n\n    getToken() {\n      return localStorage.getItem('jwtToken');\n    }\n\n    clear() {\n      localStorage.clear();\n    }\n\n    isLoggedIn() {\n      return this.getToken() && this.getRoles();\n    }\n\n  }\n\n  UserAuthService.ɵfac = function UserAuthService_Factory(t) {\n    return new (t || UserAuthService)();\n  };\n\n  UserAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserAuthService,\n    factory: UserAuthService.ɵfac,\n    providedIn: 'root'\n  });\n  return UserAuthService;\n})();","map":null,"metadata":{},"sourceType":"module"}